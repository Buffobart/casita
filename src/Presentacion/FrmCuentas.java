/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package Presentacion;

import Conexion.HibernateUtil;
import Entidad.ClsEntidadCuenta;
import Entidad.ClsEntidadEmpleadoHib;
import Entidad.ClsEntidadOperacionHib;
import daos.impl.OperacionDaoImpl;
import java.math.BigDecimal;
import java.util.Date;
import java.util.List;
import javax.swing.JOptionPane;
import javax.swing.event.InternalFrameEvent;
import javax.swing.event.InternalFrameListener;
import javax.swing.table.DefaultTableModel;
import org.hibernate.Session;

/**
 *
 * @author Alan
 */
public class FrmCuentas extends javax.swing.JInternalFrame {

    List<ClsEntidadCuenta> cuentas;
    OperacionDaoImpl operacionDao = new OperacionDaoImpl();
    
    /**
     * Creates new form FrmCuentas
     */
    public FrmCuentas() {
        initComponents();
        cargarDatos();
    }
    
    private void cargarDatos(){
        System.out.print("cargando datos");
        Session session = HibernateUtil.getInstance().getSession();
 
        session.beginTransaction();
        //List<ClsEntidadCuenta> cuentas = null;
        
        this.cuentas = session.createQuery("from ClsEntidadCuenta").list();
        
        DefaultTableModel dtm = new DefaultTableModel();
        String titulos[]={"ID","Nombre","Descripcion","Default","Balance"};
        dtm.setColumnIdentifiers(titulos);
        
        for(ClsEntidadCuenta cuenta: this.cuentas){
            String datos[] = {
                cuenta.getIdCuenta().toString(),
                cuenta.getNombre(),
                cuenta.getDescripcion(),
                cuenta.getCuentaDefault().toString(),
                cuenta.getBalance().toString()
            };
            dtm.addRow(datos);
        }
        
        this.jTable1.setModel(dtm);
        this.jTable1.changeSelection(0, 0, false, false);
        
        session.close();
    }
    

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jButton3 = new javax.swing.JButton();
        jPanel1 = new javax.swing.JPanel();
        jButton4 = new javax.swing.JButton();
        jButton1 = new javax.swing.JButton();
        jButton2 = new javax.swing.JButton();
        jPanel2 = new javax.swing.JPanel();
        jScrollPane1 = new javax.swing.JScrollPane();
        jTable1 = new javax.swing.JTable();

        jButton3.setText("Borrar");
        jButton3.setPreferredSize(new java.awt.Dimension(80, 40));
        jButton3.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton3ActionPerformed(evt);
            }
        });

        setClosable(true);
        setIconifiable(true);
        setResizable(true);
        setTitle("Cuentas Bancarias y Cajas");
        setPreferredSize(new java.awt.Dimension(730, 440));

        jPanel1.setLayout(new java.awt.FlowLayout(java.awt.FlowLayout.RIGHT));

        jButton4.setText("Hacer trenferencia");
        jButton4.setPreferredSize(new java.awt.Dimension(123, 40));
        jButton4.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton4ActionPerformed(evt);
            }
        });
        jPanel1.add(jButton4);

        jButton1.setText("Agregar");
        jButton1.setPreferredSize(new java.awt.Dimension(80, 40));
        jButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton1ActionPerformed(evt);
            }
        });
        jPanel1.add(jButton1);

        jButton2.setText("Modificar");
        jButton2.setPreferredSize(new java.awt.Dimension(80, 40));
        jButton2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton2ActionPerformed(evt);
            }
        });
        jPanel1.add(jButton2);

        getContentPane().add(jPanel1, java.awt.BorderLayout.SOUTH);

        jTable1.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null}
            },
            new String [] {
                "Title 1", "Title 2", "Title 3", "Title 4"
            }
        ));
        jTable1.setRowHeight(30);
        jTable1.setRowMargin(2);
        jTable1.setSelectionMode(javax.swing.ListSelectionModel.SINGLE_SELECTION);
        jScrollPane1.setViewportView(jTable1);

        javax.swing.GroupLayout jPanel2Layout = new javax.swing.GroupLayout(jPanel2);
        jPanel2.setLayout(jPanel2Layout);
        jPanel2Layout.setHorizontalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 714, Short.MAX_VALUE)
                .addContainerGap())
        );
        jPanel2Layout.setVerticalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 346, Short.MAX_VALUE)
                .addContainerGap())
        );

        getContentPane().add(jPanel2, java.awt.BorderLayout.CENTER);

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void jButton3ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton3ActionPerformed
        // TODO add your handling code here:
        
        int row = this.jTable1.getSelectedRow();
        if(row >= 0){
            
            ClsEntidadCuenta cuenta = this.cuentas.get(row);
            int opcion = JOptionPane.showConfirmDialog(this, "Realmente desear borrar la Cuenta: " + cuenta.getNombre() + "?", "Confirmar",
        JOptionPane.YES_NO_OPTION, JOptionPane.QUESTION_MESSAGE);
            //int opcion = JOptionPane.showConfirmDialog(this, "Realmente desear borrar la Cuenta: " + cuenta.getNombre() + "?");
            if(opcion == JOptionPane.YES_OPTION){
                Session session = HibernateUtil.getInstance().getSession();
                session.beginTransaction();
                session.delete(cuenta);

                session.getTransaction().commit();

                DefaultTableModel dtm = (DefaultTableModel) this.jTable1.getModel();
                dtm.removeRow(row);

                this.cuentas.remove(row);
                session.close();
                
                ClsEntidadOperacionHib operacion = new ClsEntidadOperacionHib();
                
                operacion.setTipo("BORRAR CUENTA");
                operacion.setCuenta(cuenta);
                operacion.setCantidad(BigDecimal.ZERO);
                operacion.setMontoInicial(cuenta.getBalance());
                operacion.setMontoFinal(BigDecimal.ZERO);
                operacion.setUsuario(new ClsEntidadEmpleadoHib(new Integer(FrmPrincipal.getInstance().strIdEmpleado)));
                operacion.setHora(new Date());
                
                this.operacionDao.addOperacion(operacion);
            }
            //JOptionPane.showMessageDialog(null, "La Cuenta se ah eliminado de la base de datos.");
        }
    }//GEN-LAST:event_jButton3ActionPerformed

    private void jButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton1ActionPerformed
        // TODO add your handling code here:
        FrmAgregarCuenta fac = new FrmAgregarCuenta(null);
        fac.addInternalFrameListener(new InternalFrameEventHandler());
        FrmPrincipal.Escritorio.add(fac);
        fac.show();
    }//GEN-LAST:event_jButton1ActionPerformed

    private void jButton2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton2ActionPerformed
        // TODO add your handling code here:
        int row = this.jTable1.getSelectedRow();
        FrmAgregarCuenta fac = new FrmAgregarCuenta(this.cuentas.get(row));
        fac.addInternalFrameListener(new InternalFrameEventHandler());
        FrmPrincipal.Escritorio.add(fac);
        fac.show();
    }//GEN-LAST:event_jButton2ActionPerformed

    private void jButton4ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton4ActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_jButton4ActionPerformed


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton jButton1;
    private javax.swing.JButton jButton2;
    private javax.swing.JButton jButton3;
    private javax.swing.JButton jButton4;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JTable jTable1;
    // End of variables declaration//GEN-END:variables

    public class InternalFrameEventHandler implements InternalFrameListener{

        @Override
        public void internalFrameOpened(InternalFrameEvent e) {
//            throw new UnsupportedOperationException("Not supported yet."); //To change body of generated methods, choose Tools | Templates.
        }

        @Override
        public void internalFrameClosing(InternalFrameEvent e) {
//            throw new UnsupportedOperationException("Not supported yet."); //To change body of generated methods, choose Tools | Templates.
        }

        @Override
        public void internalFrameClosed(InternalFrameEvent e) {
            FrmCuentas.this.cargarDatos();;
        }

        @Override
        public void internalFrameIconified(InternalFrameEvent e) {
//            throw new UnsupportedOperationException("Not supported yet."); //To change body of generated methods, choose Tools | Templates.
        }

        @Override
        public void internalFrameDeiconified(InternalFrameEvent e) {
//            throw new UnsupportedOperationException("Not supported yet."); //To change body of generated methods, choose Tools | Templates.
        }

        @Override
        public void internalFrameActivated(InternalFrameEvent e) {
//            throw new UnsupportedOperationException("Not supported yet."); //To change body of generated methods, choose Tools | Templates.
        }

        @Override
        public void internalFrameDeactivated(InternalFrameEvent e) {
//            throw new UnsupportedOperationException("Not supported yet."); //To change body of generated methods, choose Tools | Templates.
        }
        
    }

}
